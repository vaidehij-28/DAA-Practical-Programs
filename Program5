Given a sorted array of positive integers, design an algorithm and 
implement it using a program to find three indices i, j, k such that arr[i] + 
arr[j] = arr[k]. 
#include <stdio.h>

void find_triplet(int arr[], int n) {
    int found = 0;

    // Start with the last element as potential arr[k]
    for (int k = n - 1; k >= 2; k--) {
        int i = 0;
        int j = k - 1;

        while (i < j) {
            int sum = arr[i] + arr[j];
            if (sum == arr[k]) {
                printf("Found: arr[%d] + arr[%d] = arr[%d] (%d + %d = %d)\n", 
                        i, j, k, arr[i], arr[j], arr[k]);
                found = 1;
                return;
            } else if (sum < arr[k]) {
                i++;
            } else {
                j--;
            }
        }
    }

    if (!found)
        printf("No such triplet found.\n");
}

int main() {
    int T;
    printf("Enter number of test cases: ");
    scanf("%d", &T);

    while (T--) {
        int n;
        printf("\nEnter size of array: ");
        scanf("%d", &n);

        int arr[n];
        printf("Enter %d sorted positive integers:\n", n);
        for (int i = 0; i < n; i++) {
            scanf("%d", &arr[i]);
        }

        find_triplet(arr, n);
    }

    return 0;
}
