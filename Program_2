/*Given an already sorted array of positive integers, design an 
algorithm and implement it using a program to find whether given key 
element is present in the array or not. Also, find total number of 
comparisons for each input case.(Time complexity=O(Llogn)

#include <stdio.h>

int binary_search(int arr[], int n, int key, int *comparisons) {
    int low = 0, high = n - 1;

    while (low <= high) {
        (*comparisons)++;
        int mid = (low + high) / 2;

        if (arr[mid] == key)
            return 1; // Key found
        else if (arr[mid] < key)
            low = mid + 1;
        else
            high = mid - 1;
    }

    return 0; // Key not found
}

int main() {
    int arr[] = {1, 3, 5, 7, 9, 11, 13, 15, 17, 19}; // Sorted array
    int n = sizeof(arr) / sizeof(arr[0]);
    int key = 7;
    int comparisons = 0;

    int found = binary_search(arr, n, key, &comparisons);

    if (found)
        printf("Key %d found in the array.\n", key);
    else
        printf("Key %d not found in the array.\n", key);

    printf("Total comparisons made: %d\n", comparisons);

    return 0;
}
