Given an unsorted array of integers, design an algorithm and 
implement a program to sort this array using selection sort. Your program 
should also find number of comparisons and number of swaps required.

#include <stdio.h>

int main() {
    int n, i, j, min_idx, temp;
    int arr[1000];  // You can increase size if needed
    int comparisons = 0;
    int swaps = 0;

    // Input array size
    printf("Enter the size of the array: ");
    scanf("%d", &n);

    // Input array elements
    printf("Enter %d integers:\n", n);
    for (i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }

    // Selection Sort
    for (i = 0; i < n - 1; i++) {
        min_idx = i;
        for (j = i + 1; j < n; j++) {
            comparisons++;
            if (arr[j] < arr[min_idx]) {
                min_idx = j;
            }
        }

        // Swap if needed
        if (min_idx != i) {
            temp = arr[i];
            arr[i] = arr[min_idx];
            arr[min_idx] = temp;
            swaps++;
        }
    }

    // Output sorted array
    printf("Sorted array:\n");
    for (i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");

    // Output comparisons and swaps
    printf("Total comparisons: %d\n", comparisons);
    printf("Total swaps: %d\n", swaps);

    return 0;
}
