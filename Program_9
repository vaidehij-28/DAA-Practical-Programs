Given an unsorted array of positive integers, design an algorithm 
and implement it using a program to find whether there are any duplicate 
elements in the array or not. (use sorting) (Time Complexity = O(n log n))

#include <stdio.h>
#include <stdlib.h>

// Comparison function for sorting in ascending order
int compare(const void *a, const void *b) {
    return (*(int*)a - *(int*)b);
}

int main() {
    int n, i;
    int arr[1000];  // Array size limit, adjust as necessary

    // Input array size
    printf("Enter the size of the array: ");
    scanf("%d", &n);

    // Input array elements
    printf("Enter %d positive integers:\n", n);
    for (i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }

    // Step 1: Sort the array using qsort (O(n log n))
    qsort(arr, n, sizeof(int), compare);

    // Step 2: Check for duplicates by comparing adjacent elements
    int has_duplicates = 0;
    for (i = 0; i < n - 1; i++) {
        if (arr[i] == arr[i + 1]) {
            has_duplicates = 1;
            break;
        }
    }

    // Step 3: Output the result
    if (has_duplicates) {
        printf("The array contains duplicate elements.\n");
    } else {
        printf("The array does not contain any duplicate elements.\n");
    }

    return 0;
}
